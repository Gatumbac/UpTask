!function(){let t=[];!async function(){try{const e=`/api/tareas?id=${n()}`,a=await fetch(e),o=await a.json();t=o.tasks,s()}catch(t){console.log(t)}}();function e(t,e,n){const a=document.querySelector(".alert");a&&a.remove();const s=document.createElement("DIV");s.textContent=t,s.classList.add("alert",e),n.parentElement.insertBefore(s,n.nextElementSibling),setTimeout((function(){s.remove()}),5e3)}function n(){const t=new URLSearchParams(window.location.search);return Object.fromEntries(t.entries()).id}function a(t,e){setTimeout((function(){t.remove()}),e)}function s(){const e=document.querySelector("#tasks-list");if(function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(e),0===t.length){const t=document.createElement("LI");return t.textContent="No existen tareas en el proyecto",t.classList.add("no-tasks"),void e.appendChild(t)}const n={0:"Pendiente",1:"Completa"},a={0:"pending",1:"complete"};t.forEach((t=>{const s=document.createElement("LI");s.dataset.taskId=t.id,s.classList.add("task");const o=document.createElement("P");o.textContent=t.name;const c=document.createElement("DIV");c.classList.add("tasks-options");const d=document.createElement("BUTTON");d.type="button",d.classList.add("status-button"),d.classList.add(`${a[t.status]}`.toLowerCase()),d.textContent=n[t.status],d.dataset.taskStatus=t.status;const i=document.createElement("BUTTON");i.type="button",i.classList.add("deleteTask-button"),i.textContent="Eliminar",i.dataset.taskId=t.id,c.appendChild(d),c.appendChild(i),s.appendChild(o),s.appendChild(c),console.log(s),e.appendChild(s)}))}document.querySelector("#newtask-button").addEventListener("click",(function(){const o=document.createElement("DIV");o.classList.add("modal"),o.innerHTML='\n            <form class="newtask-form" method=\'POST\'>\n                <legend>Añade una nueva tarea</legend>\n                <div class="field">\n                    <label for="task">Tarea</label>\n                    <input\n                        type="text"\n                        name="name"\n                        id="task"\n                        placeholder="Nombre de la tarea"\n                    />\n                </div>\n\n                <div class="newtask-options">\n                    <input\n                        type="submit"\n                        class="newtask-submit"\n                        value="Añadir Tarea"\n                    />\n                    <button type="button" class="close-newtask">Cancelar</button>\n                </div>\n            </form>\n        ',setTimeout((function(){document.querySelector(".newtask-form").classList.add("show")}),0),o.addEventListener("click",(function(c){if(c.preventDefault(),c.target.classList.contains("close-newtask")){document.querySelector(".newtask-form").classList.add("close"),a(o,500)}c.target.classList.contains("newtask-submit")&&function(){const o=document.querySelector("#task").value.trim();if(o.length<4||o.length>60)return void e("El nombre de la tarea es obligatorio y debe ser válido","error",document.querySelector(".newtask-form legend"));!async function(o){const c=new FormData;c.append("name",o),c.append("project_id",n());try{const n="/api/tarea",d=await fetch(n,{method:"POST",body:c}),i=await d.json();e(i.message,i.type,document.querySelector(".newtask-form legend")),"success"===i.type&&(a(document.querySelector(".modal"),1e3),function(e,n,a){const s={id:String(e),name:n,status:"0",project_id:a};t=[...t,s]}(i.id,o,i.projectId),s())}catch(t){console.log(t)}}(o)}()})),document.querySelector("BODY").appendChild(o)}))}();//# sourceMappingURL=tasks.js.map
